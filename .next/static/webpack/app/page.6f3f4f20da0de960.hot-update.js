"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/supabase.ts":
/*!*************************!*\
  !*** ./lib/supabase.ts ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSupabase: () => (/* binding */ getSupabase),\n/* harmony export */   isSupabaseConfigured: () => (/* binding */ isSupabaseConfigured),\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n// Check if we have valid Supabase configuration\nconst isSupabaseConfigured = ()=>{\n    const url = \"your_supabase_project_url\";\n    const key = \"your_supabase_anon_key\";\n    return url && key && url !== 'your_https://pgcwpixpokikajpoqpzm.supabase.co' && key !== 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBnY3dwaXhwb2tpa2FqcG9xcHptIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ2NTU2ODUsImV4cCI6MjA3MDIzMTY4NX0.RG20ih9Bz5d4US9h0Da691E3lpkON5iSC0BrINJRURI' && url.includes('supabase.co');\n};\n// Lazy initialization of Supabase client\nlet supabaseClient = null;\nconst getSupabase = ()=>{\n    if (!isSupabaseConfigured()) {\n        throw new Error('Supabase is not configured');\n    }\n    if (!supabaseClient) {\n        const supabaseUrl = \"your_supabase_project_url\";\n        const supabaseAnonKey = \"your_supabase_anon_key\";\n        supabaseClient = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n    }\n    return supabaseClient;\n};\n// Export a safe supabase object that won't crash on initialization\nconst supabase = {\n    from: (table)=>{\n        if (!isSupabaseConfigured()) {\n            return {\n                select: ()=>({\n                        eq: ()=>({\n                                single: ()=>Promise.resolve({\n                                        data: null,\n                                        error: new Error('Supabase not configured')\n                                    })\n                            })\n                    }),\n                insert: ()=>({\n                        select: ()=>({\n                                single: ()=>Promise.resolve({\n                                        data: null,\n                                        error: new Error('Supabase not configured')\n                                    })\n                            })\n                    }),\n                update: ()=>({\n                        eq: ()=>Promise.resolve({\n                                error: new Error('Supabase not configured')\n                            })\n                    }),\n                delete: ()=>({\n                        eq: ()=>Promise.resolve({\n                                error: new Error('Supabase not configured')\n                            })\n                    })\n            };\n        }\n        return getSupabase().from(table);\n    },\n    channel: (name)=>{\n        if (!isSupabaseConfigured()) {\n            return {\n                on: ()=>({\n                        subscribe: ()=>({\n                                unsubscribe: ()=>{}\n                            })\n                    })\n            };\n        }\n        return getSupabase().channel(name);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9zdXBhYmFzZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW9FO0FBRXBFLGdEQUFnRDtBQUN6QyxNQUFNQyx1QkFBdUI7SUFDbEMsTUFBTUMsTUFBTUMsMkJBQW9DO0lBQ2hELE1BQU1HLE1BQU1ILHdCQUF5QztJQUVyRCxPQUFPRCxPQUNBSSxPQUNBSixRQUFRLG1EQUNSSSxRQUFRLHNOQUNSSixJQUFJTSxRQUFRLENBQUM7QUFDdEIsRUFBQztBQUVELHlDQUF5QztBQUN6QyxJQUFJQyxpQkFBd0M7QUFFckMsTUFBTUMsY0FBYztJQUN6QixJQUFJLENBQUNULHdCQUF3QjtRQUMzQixNQUFNLElBQUlVLE1BQU07SUFDbEI7SUFFQSxJQUFJLENBQUNGLGdCQUFnQjtRQUNuQixNQUFNRyxjQUFjVCwyQkFBb0M7UUFDeEQsTUFBTVUsa0JBQWtCVix3QkFBeUM7UUFDakVNLGlCQUFpQlQsbUVBQVlBLENBQUNZLGFBQWFDO0lBQzdDO0lBRUEsT0FBT0o7QUFDVCxFQUFDO0FBRUQsbUVBQW1FO0FBQzVELE1BQU1LLFdBQVc7SUFDdEJDLE1BQU0sQ0FBQ0M7UUFDTCxJQUFJLENBQUNmLHdCQUF3QjtZQUMzQixPQUFPO2dCQUNMZ0IsUUFBUSxJQUFPO3dCQUFFQyxJQUFJLElBQU87Z0NBQUVDLFFBQVEsSUFBTUMsUUFBUUMsT0FBTyxDQUFDO3dDQUFFQyxNQUFNO3dDQUFNQyxPQUFPLElBQUlaLE1BQU07b0NBQTJCOzRCQUFHO29CQUFHO2dCQUM1SGEsUUFBUSxJQUFPO3dCQUFFUCxRQUFRLElBQU87Z0NBQUVFLFFBQVEsSUFBTUMsUUFBUUMsT0FBTyxDQUFDO3dDQUFFQyxNQUFNO3dDQUFNQyxPQUFPLElBQUlaLE1BQU07b0NBQTJCOzRCQUFHO29CQUFHO2dCQUNoSWMsUUFBUSxJQUFPO3dCQUFFUCxJQUFJLElBQU1FLFFBQVFDLE9BQU8sQ0FBQztnQ0FBRUUsT0FBTyxJQUFJWixNQUFNOzRCQUEyQjtvQkFBRztnQkFDNUZlLFFBQVEsSUFBTzt3QkFBRVIsSUFBSSxJQUFNRSxRQUFRQyxPQUFPLENBQUM7Z0NBQUVFLE9BQU8sSUFBSVosTUFBTTs0QkFBMkI7b0JBQUc7WUFDOUY7UUFDRjtRQUNBLE9BQU9ELGNBQWNLLElBQUksQ0FBQ0M7SUFDNUI7SUFDQVcsU0FBUyxDQUFDQztRQUNSLElBQUksQ0FBQzNCLHdCQUF3QjtZQUMzQixPQUFPO2dCQUNMNEIsSUFBSSxJQUFPO3dCQUFFQyxXQUFXLElBQU87Z0NBQUVDLGFBQWEsS0FBTzs0QkFBRTtvQkFBRztZQUM1RDtRQUNGO1FBQ0EsT0FBT3JCLGNBQWNpQixPQUFPLENBQUNDO0lBQy9CO0FBQ0YsRUFBQyIsInNvdXJjZXMiOlsiL2hvbWUvcHJvamVjdC9saWIvc3VwYWJhc2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2xpZW50LCBTdXBhYmFzZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcydcblxuLy8gQ2hlY2sgaWYgd2UgaGF2ZSB2YWxpZCBTdXBhYmFzZSBjb25maWd1cmF0aW9uXG5leHBvcnQgY29uc3QgaXNTdXBhYmFzZUNvbmZpZ3VyZWQgPSAoKSA9PiB7XG4gIGNvbnN0IHVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTFxuICBjb25zdCBrZXkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWVxuICBcbiAgcmV0dXJuIHVybCAmJiBcbiAgICAgICAgIGtleSAmJiBcbiAgICAgICAgIHVybCAhPT0gJ3lvdXJfaHR0cHM6Ly9wZ2N3cGl4cG9raWthanBvcXB6bS5zdXBhYmFzZS5jbycgJiZcbiAgICAgICAgIGtleSAhPT0gJ2V5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNKOS5leUpwYzNNaU9pSnpkWEJoWW1GelpTSXNJbkpsWmlJNkluQm5ZM2R3YVhod2IydHBhMkZxY0c5eGNIcHRJaXdpY205c1pTSTZJbUZ1YjI0aUxDSnBZWFFpT2pFM05UUTJOVFUyT0RVc0ltVjRjQ0k2TWpBM01ESXpNVFk0TlgwLlJHMjBpaDlCejVkNFVTOWgwRGE2OTFFM2xwa09ONWlTQzBCcklOSlJVUkknICYmXG4gICAgICAgICB1cmwuaW5jbHVkZXMoJ3N1cGFiYXNlLmNvJylcbn1cblxuLy8gTGF6eSBpbml0aWFsaXphdGlvbiBvZiBTdXBhYmFzZSBjbGllbnRcbmxldCBzdXBhYmFzZUNsaWVudDogU3VwYWJhc2VDbGllbnQgfCBudWxsID0gbnVsbFxuXG5leHBvcnQgY29uc3QgZ2V0U3VwYWJhc2UgPSAoKSA9PiB7XG4gIGlmICghaXNTdXBhYmFzZUNvbmZpZ3VyZWQoKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignU3VwYWJhc2UgaXMgbm90IGNvbmZpZ3VyZWQnKVxuICB9XG4gIFxuICBpZiAoIXN1cGFiYXNlQ2xpZW50KSB7XG4gICAgY29uc3Qgc3VwYWJhc2VVcmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwhXG4gICAgY29uc3Qgc3VwYWJhc2VBbm9uS2V5ID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkhXG4gICAgc3VwYWJhc2VDbGllbnQgPSBjcmVhdGVDbGllbnQoc3VwYWJhc2VVcmwsIHN1cGFiYXNlQW5vbktleSlcbiAgfVxuICBcbiAgcmV0dXJuIHN1cGFiYXNlQ2xpZW50XG59XG5cbi8vIEV4cG9ydCBhIHNhZmUgc3VwYWJhc2Ugb2JqZWN0IHRoYXQgd29uJ3QgY3Jhc2ggb24gaW5pdGlhbGl6YXRpb25cbmV4cG9ydCBjb25zdCBzdXBhYmFzZSA9IHtcbiAgZnJvbTogKHRhYmxlOiBzdHJpbmcpID0+IHtcbiAgICBpZiAoIWlzU3VwYWJhc2VDb25maWd1cmVkKCkpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHNlbGVjdDogKCkgPT4gKHsgZXE6ICgpID0+ICh7IHNpbmdsZTogKCkgPT4gUHJvbWlzZS5yZXNvbHZlKHsgZGF0YTogbnVsbCwgZXJyb3I6IG5ldyBFcnJvcignU3VwYWJhc2Ugbm90IGNvbmZpZ3VyZWQnKSB9KSB9KSB9KSxcbiAgICAgICAgaW5zZXJ0OiAoKSA9PiAoeyBzZWxlY3Q6ICgpID0+ICh7IHNpbmdsZTogKCkgPT4gUHJvbWlzZS5yZXNvbHZlKHsgZGF0YTogbnVsbCwgZXJyb3I6IG5ldyBFcnJvcignU3VwYWJhc2Ugbm90IGNvbmZpZ3VyZWQnKSB9KSB9KSB9KSxcbiAgICAgICAgdXBkYXRlOiAoKSA9PiAoeyBlcTogKCkgPT4gUHJvbWlzZS5yZXNvbHZlKHsgZXJyb3I6IG5ldyBFcnJvcignU3VwYWJhc2Ugbm90IGNvbmZpZ3VyZWQnKSB9KSB9KSxcbiAgICAgICAgZGVsZXRlOiAoKSA9PiAoeyBlcTogKCkgPT4gUHJvbWlzZS5yZXNvbHZlKHsgZXJyb3I6IG5ldyBFcnJvcignU3VwYWJhc2Ugbm90IGNvbmZpZ3VyZWQnKSB9KSB9KVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZ2V0U3VwYWJhc2UoKS5mcm9tKHRhYmxlKVxuICB9LFxuICBjaGFubmVsOiAobmFtZTogc3RyaW5nKSA9PiB7XG4gICAgaWYgKCFpc1N1cGFiYXNlQ29uZmlndXJlZCgpKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBvbjogKCkgPT4gKHsgc3Vic2NyaWJlOiAoKSA9PiAoeyB1bnN1YnNjcmliZTogKCkgPT4ge30gfSkgfSlcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGdldFN1cGFiYXNlKCkuY2hhbm5lbChuYW1lKVxuICB9XG59XG4iXSwibmFtZXMiOlsiY3JlYXRlQ2xpZW50IiwiaXNTdXBhYmFzZUNvbmZpZ3VyZWQiLCJ1cmwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwia2V5IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJpbmNsdWRlcyIsInN1cGFiYXNlQ2xpZW50IiwiZ2V0U3VwYWJhc2UiLCJFcnJvciIsInN1cGFiYXNlVXJsIiwic3VwYWJhc2VBbm9uS2V5Iiwic3VwYWJhc2UiLCJmcm9tIiwidGFibGUiLCJzZWxlY3QiLCJlcSIsInNpbmdsZSIsIlByb21pc2UiLCJyZXNvbHZlIiwiZGF0YSIsImVycm9yIiwiaW5zZXJ0IiwidXBkYXRlIiwiZGVsZXRlIiwiY2hhbm5lbCIsIm5hbWUiLCJvbiIsInN1YnNjcmliZSIsInVuc3Vic2NyaWJlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/supabase.ts\n"));

/***/ })

});